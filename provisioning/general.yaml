# general.yaml
- name: General provisioning playbook
  hosts: all
  become: yes
  collections:
    - community.general
  vars:
    ssh_key_files: "{{ lookup('fileglob', playbook_dir + '/keys/*.pub', wantlist=True) }}"

  tasks:
    # Step 4: Register SSH keys
    - name: Register SSH keys
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ item }}"
        key: "{{ lookup('file', item) }}"
      loop: "{{ ssh_key_files }}"




    # Step 5: Disable SWAP
    - name: Disable SWAP
      ansible.builtin.shell: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Permanently remove SWAP from /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '/swapfile'
        state: absent
        backrefs: yes

    # Step 6: br_netfilter
    - name: Automate load of bridging module using overlay and br_netfilter modules
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter
          overlay

    - name: Load br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present

    # Step 7: Enable IPv4 forwarding
    - name: Enable IPv4 port forwarding kernel property
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true

    - name: Enable 'iptables' kernel property
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        sysctl_set: true

    - name: Enable 'ip6tables' kernel property
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-ip6tables 
        value: '1'
        sysctl_set: true
  
    # Step 8: Manage /etc/hosts
    - name: Generate /etc/hosts file and copy to each VM
      template:
        src: ./generate_hosts.j2
        dest: /etc/hosts

    # Step 9: Add Kubernetes repository
    - name: Add signing key to GPG
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: '0644'    

    - name: Add official Kubernetes release repo as a pkg source
      ansible.builtin.apt_repository:
        repo: 'deb [trusted=yes signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /'
        filename: 'kubernetes'
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
    
    # Step 10: Install K8s tools
    - name: Install containerd, runc, and basic Kubernetes tools
      ansible.builtin.apt:
        name:
          - containerd=1.7.24-0ubuntu1~24.04.2
          - runc=1.1.12-0ubuntu3.1
          - kubeadm=1.32.4-1.1
          - kubelet=1.32.4-1.1
          - kubectl=1.32.4-1.1
        state: present
        update_cache: yes

    # Step 11: Configure containerd
    - name: Ensure "/etc/containerd" directory exists
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
 
    - name: Dump default containerd configuration
      ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml
        
    - name: Disable AppArmor
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(\s*)disable_apparmor\s*=.*'
        line: '\1disable_apparmor = true'
        backrefs: yes
      notify: 
        - Restart containerd (if config changes were made)
 
    - name: Update version of the sandbox image
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(\s*)sandbox_image\s*=.*'
        line: '\1sandbox_image = "registry.k8s.io/pause:3.10"'
        backrefs: yes
      notify: 
        - Restart containerd (if config changes were made)
 
    - name: Set SystemdCgroup to true
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(\s*)SystemdCgroup\s*=.*'
        line: '\1SystemdCgroup = true'
        backrefs: yes
      notify: 
        - Restart containerd (if config changes were made)
    
    - name: Flush handlers
      meta: flush_handlers
  
    # Step 12: Kubelet
    - name: Auto-start kubelet service on future boots
      service:
        name: kubelet
        state: started
        enabled: yes

  handlers:
    - name: Restart containerd (if config changes were made)
      ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: yes     