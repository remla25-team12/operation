# general.yaml
- hosts: all
  become: yes
  collections:
    - community.general
  vars_files:
    - "{{ playbook_dir }}/keys/selin.pub"
    - "{{ playbook_dir }}/keys/mees.pub"
  tasks:
    - name: Register SSH key of Selin
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ selin_key }}"

    - name: Register SSH key of Mees
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ mees_key }}"

    - name: Disable SWAP
      ansible.builtin.shell: swapoff -a

    - name: Prevent a re-mount on the next boot by removing swap entries
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '/swapfile'
        state: absent
        backrefs: yes

    - name: Register the automated load for future system boots using overlay and br_netfilter modules
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter
          overlay
        owner: root
        group: root
        mode: '0644'

    - name: Add br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present
# Step 11: Configure containerd
   - name: Generate default containerd file
     ansible.builtin.command: containerd config default
     register: containerd_config_default
     changed_when: false


   - name: Ensure "/etc/containerd" directory exists
     ansible.builtin.file:
       path: /etc/containerd
       state: directory
       owner: root
       group: root
       mode: '0755'

   - name: Save default containerd file to "/etc/containerd" directory
     ansible.builtin.copy:
       dest: /etc/containerd/config.toml
       content: "{{ containerd_config_default.stdout }}"
       owner: root
       group: root
       mode: '0644'
     when: containerd_config_default.stdout is defined and containerd_config_default.stdout | length > 0

   - name: Disable AppArmor
     ansible.builtin.lineinfile:
       path: /etc/containerd/config.toml
       regexp: '^(\s*)disable_apparmor\s*=.*'
       line: '\1disable_apparmor = true'
       backrefs: yes


   - name: Update version of the sandbox image
     ansible.builtin.lineinfile:
       path: /etc/containerd/config.toml
       regexp: '^(\s*)sandbox_image\s*=.*'
       line: '\1sandbox_image = "registry.k8s.io/pause:3.10"'
       backrefs: yes


   - name: Set SystemdCgroup to true
     ansible.builtin.lineinfile:
       path: /etc/containerd/config.toml
       regexp: '^(\s*)SystemdCgroup\s*=.*'
       line: '\1SystemdCgroup = true'
       backrefs: yes


   - name: Restart containerd service
     ansible.builtin.service:
       name: containerd
       state: restarted
       enabled: yes